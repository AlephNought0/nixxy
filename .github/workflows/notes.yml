name: Serve Static Notes

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - docs/**
      - .github/workflows/notes.yml

permissions:
  contents: write

jobs:
  serve-notes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Go Binary
        run: |
          API_URL="https://api.github.com/repos/notashelf/docr/releases/latest"

          # Get the latest release tag from the GitHub API
          TAG=$(curl -s "$API_URL" | grep 'tag_name' | cut -d '"' -f 4)
          CLEANTAG="${TAG#v}" # for the goreleaser assets

          if [ -z "$TAG" ]; then
            echo -en "Failed to retrieve the latest release tag.\n"
            exit 1
          fi

          echo -en "Received latest tag: ${TAG}\n"
          echo -en "Sanitized tag: ${CLEANTAG}\n"

          # Compose the correct base URL using the tag
          # https://github.com/NotAShelf/docr/releases/download/v0.0.4/docr_0.0.4_linux_amd64.tar.gz
          URL="https://github.com/NotAShelf/docr/releases/download/${TAG}"
          echo -en "Constructed download URL: ${URL}\n"

          echo -en "Two files will be downloaded: \n- docr_${CLEANTAG}_linux_amd64.tar.gz\n- templates.tar.gz\n\n"

          # Download the tar files
          curl -LO "$URL/docr_${CLEANTAG}_linux_amd64.tar.gz"
          curl -LO "$URL/templates.tar.gz"

          # Untar the downloaded tar files
          tar -xzvf "docr_${CLEANTAG}_linux_amd64.tar.gz"
          tar -xzvf "templates.tar.gz"
          # make the binary executable:with
          chmod +x docr

          # write my installer's settings
          cat > settings.json <<EOF
          {
            "githubUsername": "NotAShelf",
            "websiteName": "NotAShelf's Notes",
            "templateDir": "templates",
            "markdownDir": "docs/notes",
            "outputDir": "static",
            "websiteURL": "https://notashelf.github.io/nyx",
            "websiteDescription": "NotAShelf's Notes on Various Topics",
            "timestampsFromFilename": true
          }
          EOF

      - name: Build Notes Page
        run: ./docr

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: static/
